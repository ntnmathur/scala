apply plugin: 'scala'
apply plugin: 'eclipse'
apply plugin: 'provided-base'
apply plugin: 'idea'
apply plugin: 'com.github.johnrengelman.shadow'

task "create-dirs" << {
   sourceSets*.java.srcDirs*.each { it.mkdirs() }
   sourceSets*.resources.srcDirs*.each { it.mkdirs() }
}

buildscript {
  repositories {
    jcenter()
    maven { url 'http://repo.spring.io/plugins-release' }
  }
  dependencies {
    classpath 'com.netflix.nebula:gradle-extra-configurations-plugin:2.2.1'
    classpath 'com.github.jengelman.gradle.plugins:shadow:1.2.2'
  }
}

repositories {
  mavenLocal()
  mavenCentral()
  maven { url 'http://conjars.org/repo/' }
}



ext.hadoopVersion = '2.6.0'
ext.sparkVersion = '1.5.0'

dependencies {
    provided 'org.scala-lang:scala-library:2.11.7'
    testCompile "org.scala-lang:scala-library:2.11.7"
   
    
    

}

shadowJar {
  zip64 true
}


jar {
    manifest {
        attributes( "Main-Class": "com.nitin.scalaByExample.QuickSortImperative" )
    }
    
    
}

// The path of the scala-compiler jar
def scalaPath = buildscript.configurations.classpath.find {
    it.name == "scala-compiler-2.10.5.jar"
}

// The classpath of this project and its dependencies
def classpath = sourceSets.main.runtimeClasspath.asPath

// Prints the classpath needed to launch the REPL
task printClasspath << {
    println "${scalaPath}:${classpath}"
}